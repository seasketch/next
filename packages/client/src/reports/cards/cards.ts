export type ProsemirrorBodyJSON = any;

export type ReportCardType = "Attributes" | "TextBlock" | "SketchSize";

/**
 * A ReportCardConfiguration is a configuration object for a card that is
 * used to render a card in a report. It is used to determine the type of card,
 * its renderer component, and the componentSettings that are available.
 *
 * This configuration is used througout the client, and ultimately will need to
 * be stored in the database of project settings.
 */
export type ReportCardConfiguration<T> = {
  /**
   * Unique id of the card, usually generated by the server.
   */
  id: number;
  /**
   * Used to determine the type of card, its renderer component, and the
   * componentSettings that are available.
   */
  type: ReportCardType;
  /**
   * Almost all cards will have a main text body area.
   */
  body: ProsemirrorBodyJSON;
  /**
   * Alternate language settings for the card. Can be used with
   * useLocalizedComponentSetting to easily access component settings in the
   * appropriate language. (really? Might rely on FormLanguageContext. Might
   * need to update or create a new pattern)
   */
  alternateLanguageSettings: { [langCode: string]: any };
  /**
   * The settings for the card that are particular to it's type.
   */
  componentSettings: T;
  /**
   * The position of the card in the report. Cards are shown in ascending order
   * of position.
   */
  position: number;
};

export type ReportTabConfiguration = {
  /**
   * Unique id of the tab, usually generated by the server.
   */
  id: number;
  /**
   * The title of the tab.
   */
  title: string;
  /**
   * The position of the tab in the report. Tabs are shown in ascending order
   * of position.
   */
  position: number;
  /**
   * The cards that are shown in the tab.
   */
  cards: ReportCardConfiguration<any>[];
  /**
   * Alternate language settings for the tab (e.g. title translations)
   */
  alternateLanguageSettings: { [langCode: string]: any };
};

/**
 * A ReportConfiguration is a configuration object for a report that is
 * used to render a report. It is used to determine the tabs that are shown
 * in the report, and the cards that are shown in each tab.
 *
 * Each sketch class has at least one ReportConfiguration, and multiple could be
 * used to support published vs unpublished changes, or even versioning of
 * reports.
 *
 */
export type ReportConfiguration = {
  /**
   * Unique id of the report, usually generated by the server.
   */
  id: number;
  /**
   * The tabs that are shown in the report. A single tab would indicate a
   * "no tabs" display without a tab bar.
   */
  tabs: ReportTabConfiguration[];
};

export type ReportCardProps<T extends ReportCardConfiguration<any>> = {
  config: T;
};

// Import card implementations

export function registerCards() {
  import("./TextBlockCard");
  import("./SketchAttributesCard");
}
