fragment BasemapDetails on Basemap {
  id
  attribution
  interactivitySettings {
    cursor
    id
    layers
    longTemplate
    shortTemplate
    type
  }
  labelsLayerId
  name
  optionalBasemapLayers {
    basemapId
    id
    defaultVisibility
    description
    options
    groupType
    layers
    metadata
    name
  }
  description
  projectId
  terrainExaggeration
  terrainMaxZoom
  terrainOptional
  terrainTileSize
  terrainUrl
  terrainVisibilityDefault
  thumbnail
  tileSize
  type
  url
  surveysOnly
}

query GetBasemaps($slug: String!) {
  projectBySlug(slug: $slug) {
    id
    surveyBasemaps {
      ...BasemapDetails
    }
    basemaps {
      ...BasemapDetails
    }
  }
}

mutation CreateBasemap(
  $projectId: Int
  $name: String!
  $thumbnail: Upload!
  $tileSize: Int
  $type: BasemapType!
  $url: String!
  $surveysOnly: Boolean
) {
  createBasemap(
    input: {
      basemap: {
        projectId: $projectId
        name: $name
        thumbnail: $thumbnail
        tileSize: $tileSize
        type: $type
        url: $url
        surveysOnly: $surveysOnly
      }
    }
  ) {
    basemap {
      ...BasemapDetails
    }
  }
}

mutation UploadBasemap(
  $projectId: Int!
  $name: String!
  $thumbnail: Upload!
  $existingId: Int
  $style: JSON!
  $surveysOnly: Boolean
) {
  uploadStyle(
    thumb: $thumbnail
    style: $style
    projectId: $projectId
    id: $existingId
    name: $name
    surveysOnly: $surveysOnly
  ) {
    ...BasemapDetails
  }
}

fragment BasemapAdminDetails on Basemap {
  id
  attribution
  interactivitySettings {
    cursor
    id
    layers
    longTemplate
    shortTemplate
    type
  }
  description
  labelsLayerId
  name
  optionalBasemapLayers {
    basemapId
    defaultVisibility
    description
    options
    groupType
    id
    layers
    metadata
    name
  }
  projectId
  terrainExaggeration
  terrainMaxZoom
  terrainOptional
  terrainTileSize
  terrainUrl
  terrainVisibilityDefault
  thumbnail
  tileSize
  type
  url
  surveysOnly
}

query GetBasemap($id: Int!) {
  basemap(id: $id) {
    ...BasemapAdminDetails
  }
}

mutation UpdateBasemap($id: Int!, $name: String) {
  updateBasemap(input: { id: $id, patch: { name: $name } }) {
    basemap {
      name
      id
    }
  }
}

mutation UpdateBasemapUrl($id: Int!, $url: String!) {
  updateBasemap(input: { id: $id, patch: { url: $url } }) {
    basemap {
      url
      id
    }
  }
}

mutation UpdateBasemapLabelsLayer($id: Int!, $layer: String) {
  updateBasemap(input: { id: $id, patch: { labelsLayerId: $layer } }) {
    basemap {
      id
      labelsLayerId
    }
  }
}

mutation Toggle3dTerrain($id: Int!, $terrainUrl: String) {
  updateBasemap(input: { id: $id, patch: { terrainUrl: $terrainUrl } }) {
    basemap {
      id
      terrainUrl
    }
  }
}

mutation Set3dTerrain(
  $id: Int!
  $terrainUrl: String
  $terrainOptional: Boolean
  $terrainVisibilityDefault: Boolean
) {
  updateBasemap(
    input: {
      id: $id
      patch: {
        terrainUrl: $terrainUrl
        terrainOptional: $terrainOptional
        terrainVisibilityDefault: $terrainVisibilityDefault
      }
    }
  ) {
    basemap {
      id
      terrainUrl
      terrainVisibilityDefault
      terrainOptional
    }
  }
}

mutation UpdateTerrainExaggeration($id: Int!, $terrainExaggeration: BigFloat!) {
  updateBasemap(
    input: { id: $id, patch: { terrainExaggeration: $terrainExaggeration } }
  ) {
    basemap {
      id
      terrainExaggeration
    }
  }
}

mutation DeleteBasemap($id: Int!) {
  deleteBasemap(input: { id: $id }) {
    basemap {
      id
    }
  }
}

query OptionalLayer($id: Int!) {
  optionalBasemapLayer(id: $id) {
    id
    basemapId
    defaultVisibility
    description
    options
    groupType
    layers
    metadata
    name
  }
}

mutation UpdateOptionalLayerName($id: Int!, $name: String!) {
  updateOptionalBasemapLayer(input: { id: $id, patch: { name: $name } }) {
    optionalBasemapLayer {
      id
      name
    }
  }
}

mutation CreateOptionalLayer(
  $name: String!
  $basemapId: Int!
  $groupType: OptionalBasemapLayersGroupType
  $options: JSON
) {
  createOptionalBasemapLayer(
    input: {
      optionalBasemapLayer: {
        name: $name
        basemapId: $basemapId
        groupType: $groupType
        options: $options
      }
    }
  ) {
    optionalBasemapLayer {
      basemap {
        ...BasemapAdminDetails
      }
      id
      basemapId
      defaultVisibility
      description
      options
      groupType
      layers
      metadata
      name
    }
  }
}

mutation UpdateOptionalLayer(
  $id: Int!
  $name: String
  $description: String
  $defaultVisibility: Boolean
  $metadata: JSON
) {
  updateOptionalBasemapLayer(
    input: {
      id: $id
      patch: {
        name: $name
        description: $description
        defaultVisibility: $defaultVisibility
        metadata: $metadata
      }
    }
  ) {
    optionalBasemapLayer {
      name
      description
      id
      defaultVisibility
      metadata
    }
  }
}

mutation DeleteOptionalLayer($id: Int!) {
  deleteOptionalBasemapLayer(input: { id: $id }) {
    optionalBasemapLayer {
      id
    }
  }
}

mutation UpdateOptionalBasemapLayerLayerList($id: Int!, $layers: [String]) {
  updateOptionalBasemapLayer(input: { id: $id, patch: { layers: $layers } }) {
    optionalBasemapLayer {
      id
      layers
    }
  }
}

mutation UpdateOptionalBasemapLayerOptions($id: Int!, $options: JSON!) {
  updateOptionalBasemapLayer(input: { id: $id, patch: { options: $options } }) {
    optionalBasemapLayer {
      id
      options
    }
  }
}

query GetOptionalBasemapLayer($id: Int!) {
  optionalBasemapLayer(id: $id) {
    id
    basemapId
    name
    description
    defaultVisibility
    groupType
    layers
    metadata
    options
  }
}

query GetOptionalBasemapLayerMetadata($id: Int!) {
  optionalBasemapLayer(id: $id) {
    id
    metadata
  }
}

mutation UpdateOptionalBasemapLayerMetadata($id: Int!, $metadata: JSON) {
  updateOptionalBasemapLayer(
    input: { id: $id, patch: { metadata: $metadata } }
  ) {
    optionalBasemapLayer {
      id
      metadata
    }
  }
}

mutation UpdateInteractivitySettingsLayers($id: Int!, $layers: [String]) {
  updateInteractivitySetting(input: { id: $id, patch: { layers: $layers } }) {
    interactivitySetting {
      layers
      id
    }
  }
}

query MapboxKeys($slug: String!) {
  projectBySlug(slug: $slug) {
    id
    mapboxPublicKey
    mapboxSecretKey
  }
}
