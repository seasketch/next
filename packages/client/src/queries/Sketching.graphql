fragment SketchTocDetails on Sketch {
  id
  bbox
  name
  numVertices
  sketchClassId
  collectionId
  bbox
  folderId
  timestamp
  updatedAt
  createdAt
  isCollection
  filterMvtUrl
  sketchClass {
    id
    geometryType
  }
}

fragment SketchFolderDetails on SketchFolder {
  collectionId
  folderId
  id
  name
}

query Sketching($slug: String!) {
  me {
    id
  }
  projectBySlug(slug: $slug) {
    sessionParticipationStatus
    id
    supportedLanguages
    sketchClasses {
      ...SketchingDetails
    }
    mySketches {
      __typename
      ...SketchTocDetails
    }
    myFolders {
      __typename
      ...SketchFolderDetails
    }
    sketchGeometryToken
  }
}

mutation CreateSketchFolder(
  $slug: String!
  $name: String!
  $folderId: Int
  $collectionId: Int
) {
  createSketchFolder(
    input: {
      slug: $slug
      name: $name
      folderId: $folderId
      collectionId: $collectionId
    }
  ) {
    sketchFolder {
      ...SketchFolderDetails
    }
  }
}

fragment SketchCRUDResponse on Sketch {
  ...SketchTocDetails
  id
  name
  userGeom {
    geojson
  }
  properties
  geojsonProperties
  filterMvtUrl
  ...SketchEditorModalDetails
  parentCollection {
    id
    updatedAt
    timestamp
  }
  relatedFragments {
    hash
    sketches
    geographies
  }
}

mutation CreateSketch(
  $name: String!
  $sketchClassId: Int!
  $userGeom: GeoJSON
  $collectionId: Int
  $folderId: Int
  $properties: JSON!
) {
  createSketch(
    name: $name
    sketchClassId: $sketchClassId
    userGeom: $userGeom
    folderId: $folderId
    collectionId: $collectionId
    properties: $properties
  ) {
    ...SketchCRUDResponse
  }
}

mutation UpdateSketch(
  $id: Int!
  $name: String!
  $userGeom: GeoJSON
  $properties: JSON!
) {
  updateSketch(
    id: $id
    name: $name
    userGeom: $userGeom
    properties: $properties
  ) {
    ...SketchCRUDResponse
  }
}

mutation DeleteSketchTocItems($items: [UpdateTocItemParentInput]!) {
  deleteSketchTocItems(items: $items) {
    deletedItems
    updatedCollections {
      id
      updatedAt
    }
  }
}

mutation RenameFolder($id: Int!, $name: String!) {
  updateSketchFolder(input: { id: $id, patch: { name: $name } }) {
    sketchFolder {
      id
      name
    }
  }
}

fragment SketchEditorModalDetails on Sketch {
  ...SketchTocDetails
  userGeom {
    geojson
  }
  properties
  userAttributes
  sketchClass {
    ...SketchingDetails
  }
}

query GetSketchForEditing($id: Int!) {
  sketch(id: $id) {
    ...SketchEditorModalDetails
  }
}

mutation UpdateTocItemsParent(
  $folderId: Int
  $collectionId: Int
  $tocItems: [UpdateTocItemParentInput]!
) {
  updateSketchTocItemParent(
    folderId: $folderId
    collectionId: $collectionId
    tocItems: $tocItems
  ) {
    folders {
      id
      folderId
      collectionId
    }
    sketches {
      id
      updatedAt
      folderId
      collectionId
      filterMvtUrl
    }
    updatedCollections {
      id
      updatedAt
    }
  }
}

fragment ReportContextSketchDetails on Sketch {
  id
  name
  createdAt
  updatedAt
  properties
  userAttributes
  childProperties
  sketchClassId
  relatedFragments {
    hash
    sketches
    geographies
  }
  siblings {
    id
    name
    sketchClassId
  }
  children {
    id
    name
    sketchClassId
  }
}

fragment ReportContextSketchClassDetails on SketchClass {
  id
  projectId
  geometryType
  form {
    id
    formElements {
      exportId
      id
      isInput
      typeId
      body
      generatedExportId
      generatedLabel
      position
      alternateLanguageSettings
    }
    logicRules {
      ...LogicRuleDetails
    }
  }
  project {
    id
    supportedLanguages
    geographies {
      id
      name
      translatedProps
    }
  }
  clippingGeographies {
    id
  }
}

query SketchReportingDetails($id: Int!) {
  sketch(id: $id) {
    ...ReportContextSketchDetails
  }
}

query ReportSketchDetails($id: Int!) {
  sketch(id: $id) {
    ...ReportContextSketchDetails
    sketchClass {
      ...ReportContextSketchClassDetails
    }
  }
}

mutation CopyTocItem($id: Int!, $type: SketchChildType!) {
  copySketchTocItem(id: $id, type: $type) {
    folders {
      ...SketchFolderDetails
    }
    sketches {
      ...SketchTocDetails
    }
    parentId
    updatedCollection {
      id
      updatedAt
    }
  }
}

fragment ProjectSketches on Project {
  sketchClasses {
    ...SketchingDetails
  }
}

fragment GeographySubjectDetails on GeographySubject {
  id
  __typename
}

fragment FragmentSubjectDetails on FragmentSubject {
  hash
  sketches
  geographies
  __typename
}

fragment CompatibleSpatialMetricDetails on CompatibleSpatialMetric {
  id
  type
  subject {
    ...GeographySubjectDetails
    ...FragmentSubjectDetails
  }
  createdAt
  updatedAt
  value
  state
  groupBy
  includedProperties
  errorMessage
  progress
  jobKey
  sourceUrl
  groupBy
  sourceProcessingJobDependency
}

fragment MinimalSpatialMetricDetails on CompatibleSpatialMetric {
  id
  updatedAt
  state
  value
  errorMessage
  progress
}

mutation GetOrCreateSpatialMetrics($dependencies: [SpatialMetricDependency!]!) {
  getOrCreateSpatialMetrics(inputs: $dependencies) {
    metrics {
      ...CompatibleSpatialMetricDetails
    }
  }
}

subscription GeographyMetricSubscription($projectId: Int!) {
  geographyMetrics(projectId: $projectId) {
    metricId
    geographyId
    projectId
    metric {
      ...CompatibleSpatialMetricDetails
    }
  }
}

subscription SketchMetricSubscription($sketchId: Int!) {
  sketchMetrics(sketchId: $sketchId) {
    metricId
    sketchId
    metric {
      ...CompatibleSpatialMetricDetails
    }
  }
}

mutation RetryFailedSpatialMetrics($metricIds: [BigInt!]!) {
  retryFailedSpatialMetrics(input: { metricIds: $metricIds }) {
    boolean
  }
}
