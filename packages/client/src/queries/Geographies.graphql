fragment ClippingDataSourceDetails on DataSource {
  id
  type
  url
  dataLibraryTemplateId
  createdAt
  authorProfile {
    ...UserProfileDetails
  }
  outputs {
    id
    type
    url
  }
}

fragment ClippingLayerDetails on DataLayer {
  id
  version
  mapboxGlStyles
  sourceLayer
  vectorObjectKey
}

fragment GeographyDetails on Geography {
  id
  hash
  name
  translatedProps
  clientTemplate
  bounds
  clippingLayers {
    id
    operationType
    templateId
    cql2Query
    objectKey
    dataLayer {
      ...ClippingLayerDetails
    }
    dataSource {
      ...ClippingDataSourceDetails
    }
  }
}

query GeographyClippingSettings($slug: String!) {
  gmapssatellitesession {
    expiresAt
    mapType
    session
  }
  geographyClippingLayers {
    ...ClippingLayerDetails
    dataSource {
      ...ClippingDataSourceDetails
    }
  }
  projectBySlug(slug: $slug) {
    id
    geographies {
      ...GeographyDetails
    }
  }
  geographies {
    ...GeographyDetails
  }
}

query EEZLayer {
  eezlayer {
    id
    dataLayer {
      vectorObjectKey
      id
      dataSource {
        id
        url
        type
        geostats
        outputs {
          id
          type
          url
        }
      }
    }
  }
}

mutation CreateGeographies($geographies: [CreateGeographyArgs!]!) {
  createGeographies(input: $geographies) {
    geographies {
      ...GeographyDetails
    }
  }
}

query GeographyById($id: Int!) {
  geographyClippingLayers {
    ...ClippingLayerDetails
    dataSource {
      ...ClippingDataSourceDetails
    }
  }
  geography(id: $id) {
    ...GeographyDetails
    clippingLayers {
      id
      operationType
      templateId
      cql2Query
      dataLayer {
        ...ClippingLayerDetails
        tableOfContentsItem {
          title
          id
        }
      }
      dataSource {
        ...ClippingDataSourceDetails
      }
    }
  }
}

mutation DeleteGeography($id: Int!, $deleteRelatedLayers: Boolean = false) {
  deleteGeographyAndTableOfContentsItems(
    id: $id
    deleteRelatedTableOfContentsItems: $deleteRelatedLayers
  ) {
    id
  }
}

mutation UpdateGeography($id: Int!, $payload: UpdateProjectGeographyPayload!) {
  updateProjectGeography(id: $id, input: $payload) {
    geography {
      ...GeographyDetails
    }
  }
}

fragment OverlayForGeography on TableOfContentsItem {
  id
  title
  bounds
  dataLayer {
    id
    vectorGeometryType
    sourceLayer
    mapboxGlStyles
    dataSource {
      createdAt
      id
      geostats
      type
      url
      outputs {
        type
        size
      }
      authorProfile {
        __typename
        picture
        userId
        fullname
        affiliations
        email
        nickname
      }
    }
  }
}

query OverlaysForGeography($slug: String!) {
  projectBySlug(slug: $slug) {
    id
    draftTableOfContentsItems {
      ...OverlayForGeography
    }
  }
}
