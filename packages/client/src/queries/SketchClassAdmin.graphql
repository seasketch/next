fragment SketchFormElement on FormElement {
  id
  componentSettings
  alternateLanguageSettings
  body
  isRequired
  isInput
  position
  typeId
  exportId
  generatedExportId
  generatedLabel
  type {
    componentName
    isInput
    isSingleUseOnly
    isSurveysOnly
    label
    isHidden
  }
}

fragment SketchingDetails on SketchClass {
  id
  name
  isArchived
  isTemplate
  mapboxGlStyle
  projectId
  sketchCount
  validChildren {
    id
    name
  }
  allowMulti
  form {
    id
    formElements {
      ...SketchFormElement
    }
    logicRules {
      ...LogicRuleDetails
    }
  }
  geometryType
  geoprocessingClientName
  geoprocessingClientUrl
  geoprocessingProjectUrl
  formElementId
  preprocessingEndpoint
  preprocessingProjectUrl
  canDigitize
  translatedProps
}

fragment AdminSketchingDetails on SketchClass {
  ...SketchingDetails
  acl {
    nodeId
    type
    id
    sketchClassId
    groups {
      id
      name
    }
  }
}

query SketchClassForm($id: Int!) {
  form(id: $id) {
    id
    formElements {
      ...SketchFormElement
    }
    sketchClassId
  }
}

mutation CreateSketchClass($projectId: Int!, $templateId: Int!) {
  createSketchClassFromTemplate(
    input: { projectId: $projectId, templateSketchClassId: $templateId }
  ) {
    sketchClass {
      ...AdminSketchingDetails
    }
  }
}

fragment TemplateSketchClass on SketchClass {
  id
  name
  geometryType
  templateDescription
}

query TemplateSketchClasses {
  templateSketchClasses {
    ...TemplateSketchClass
  }
}

query SketchClasses($slug: String!) {
  projectBySlug(slug: $slug) {
    id
    sketchClasses {
      ...AdminSketchingDetails
    }
  }
}

mutation UpdateSketchClass($id: Int!, $name: String, $isArchived: Boolean) {
  updateSketchClass(
    input: { id: $id, patch: { name: $name, isArchived: $isArchived } }
  ) {
    sketchClass {
      ...AdminSketchingDetails
    }
  }
}

mutation DeleteSketchClass($id: Int!) {
  deleteSketchClass(input: { id: $id }) {
    sketchClass {
      ...AdminSketchingDetails
    }
  }
}

mutation UpdateGeoprocessingServices(
  $id: Int!
  $preprocessingEndpoint: String
  $preprocessingProjectUrl: String
  $geoprocessingClientName: String
  $geoprocessingClientUrl: String
  $geoprocessingProjectUrl: String
) {
  updateSketchClass(
    input: {
      id: $id
      patch: {
        preprocessingEndpoint: $preprocessingEndpoint
        preprocessingProjectUrl: $preprocessingProjectUrl
        geoprocessingClientName: $geoprocessingClientName
        geoprocessingClientUrl: $geoprocessingClientUrl
        geoprocessingProjectUrl: $geoprocessingProjectUrl
      }
    }
  ) {
    sketchClass {
      id
      preprocessingEndpoint
      preprocessingProjectUrl
      geoprocessingClientName
      geoprocessingClientUrl
      geoprocessingProjectUrl
    }
  }
}

mutation UpdateSketchFormElement(
  $id: Int!
  $isRequired: Boolean
  $exportId: String
) {
  updateFormElement(
    input: { id: $id, patch: { isRequired: $isRequired, exportId: $exportId } }
  ) {
    formElement {
      id
      isRequired
      exportId
    }
  }
}

query SketchClassLogicRuleDetails($sketchClassId: Int!) {
  sketchClass(id: $sketchClassId) {
    ...SketchingDetails
  }
}

mutation createLogicRuleForSketchClass(
  $formElementId: Int!
  $operator: FieldRuleOperator!
  $command: FormLogicCommand!
  $subjectId: Int!
) {
  createLogicRule(
    input: {
      command: $command
      formElementId: $formElementId
      operator: $operator
      subjectId: $subjectId
    }
  ) {
    formLogicRule {
      ...LogicRuleDetails
    }
  }
}
