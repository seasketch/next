mutation CreateTableOfContentsItem(
  $title: String!
  $stableId: String!
  $projectId: Int!
  $isFolder: Boolean!
  $parentStableId: String
  $metadata: JSON
  $bounds: [BigFloat]
  $dataLayerId: Int
) {
  createTableOfContentsItem(
    input: {
      tableOfContentsItem: {
        title: $title
        stableId: $stableId
        projectId: $projectId
        parentStableId: $parentStableId
        metadata: $metadata
        bounds: $bounds
        dataLayerId: $dataLayerId
        isFolder: $isFolder
      }
    }
  ) {
    tableOfContentsItem {
      id
      title
      stableId
      projectId
      parentStableId
      isClickOffOnly
      isDraft
      isFolder
      metadata
      bounds
      dataLayerId
    }
  }
}

mutation CreateArcGISDynamicDataSource(
  $projectId: Int!
  $url: String!
  $attribution: String
  $bounds: [BigFloat]
  $queryParameters: JSON
) {
  createDataSource(
    input: {
      dataSource: {
        projectId: $projectId
        type: ARCGIS_VECTOR
        url: $url
        attribution: $attribution
        bounds: $bounds
        queryParameters: $queryParameters
      }
    }
  ) {
    dataSource {
      id
      projectId
      type
      url
    }
  }
}

mutation CreateArcGISImageSource(
  $projectId: Int!
  $url: String!
  $attribution: String
  $bounds: [BigFloat]
  $queryParameters: JSON
  $enableHighDPI: Boolean
  $supportsDynamicLayers: Boolean!
) {
  createDataSource(
    input: {
      dataSource: {
        projectId: $projectId
        type: ARCGIS_DYNAMIC_MAPSERVER
        url: $url
        attribution: $attribution
        bounds: $bounds
        queryParameters: $queryParameters
        useDevicePixelRatio: $enableHighDPI
        supportsDynamicLayers: $supportsDynamicLayers
      }
    }
  ) {
    dataSource {
      id
      url
    }
  }
}

mutation CreateSeaSketchVectorSource(
  $projectId: Int!
  $attribution: String
  $bounds: [BigFloat]!
  $byteLength: Int!
  $originalSourceUrl: String
  $importType: DataSourceImportTypes!
  $enhancedSecurity: Boolean!
) {
  createDataSource(
    input: {
      dataSource: {
        projectId: $projectId
        type: SEASKETCH_VECTOR
        attribution: $attribution
        bounds: $bounds
        byteLength: $byteLength
        originalSourceUrl: $originalSourceUrl
        importType: $importType
        enhancedSecurity: $enhancedSecurity
      }
    }
  ) {
    dataSource {
      id
      projectId
      type
      url
      presignedUploadUrl
      bucketId
      enhancedSecurity
      objectKey
    }
  }
}

mutation CreateDataLayer(
  $projectId: Int!
  $dataSourceId: Int!
  $mapboxGlStyles: JSON
  $renderUnder: RenderUnderType
  $sublayer: String
) {
  createDataLayer(
    input: {
      dataLayer: {
        projectId: $projectId
        dataSourceId: $dataSourceId
        mapboxGlStyles: $mapboxGlStyles
        renderUnder: $renderUnder
        sublayer: $sublayer
      }
    }
  ) {
    dataLayer {
      id
      dataSourceId
      zIndex
      interactivitySettings {
        cursor
        id
        longTemplate
        shortTemplate
        type
      }
    }
  }
}

# mutation CreateSprite(
#   $spriteId: String!
#   $dataLayerId: Int!
#   $width: Int!
#   $height: Int!
#   $pixelRatio: Int!
#   $url: Upload!
# ) {
#   createSprite(
#     input: {
#       sprite: {
#         spriteId: $spriteId
#         width: $width
#         height: $height
#         pixelRatio: $pixelRatio
#         dataLayerId: $dataLayerId
#         url: $url
#       }
#     }
#   ) {
#     sprite {
#       width
#       height
#       spriteId
#       id
#       url
#       dataLayerId
#       pixelRatio
#     }
#   }
# }

mutation GetOrCreateSprite(
  $height: Int!
  $width: Int!
  $pixelRatio: Int!
  $projectId: Int!
  $smallestImage: Upload!
) {
  getOrCreateSprite(
    height: $height
    pixelRatio: $pixelRatio
    projectId: $projectId
    smallestImage: $smallestImage
    width: $width
  ) {
    id
    md5
    projectId
    type
    spriteImages {
      spriteId
      height
      pixelRatio
      url
      width
    }
  }
}

mutation AddImageToSprite(
  $spriteId: Int!
  $width: Int!
  $height: Int!
  $pixelRatio: Int!
  $image: Upload!
) {
  addImageToSprite(
    height: $height
    width: $width
    pixelRatio: $pixelRatio
    spriteId: $spriteId
    image: $image
  ) {
    id
    md5
    projectId
    type
    spriteImages {
      spriteId
      height
      pixelRatio
      url
      width
    }
  }
}
