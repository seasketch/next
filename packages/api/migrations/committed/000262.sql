--! Previous: sha1:6d306c6b07103a6314df3a1664f81363102291c8
--! Hash: sha1:7532a83f30e3530fd5091ab490483159ff78d38d

-- Enter migration here
drop table if exists data_upload_outputs;
drop type if exists data_upload_output_type;
CREATE TYPE data_upload_output_type AS ENUM ('GeoJSON', 'FlatGeobuf', 'ZippedShapefile', 'PMTiles');

create table if not exists data_upload_outputs (
  id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  data_source_id int references data_sources(id) on delete set null,
  project_id int references projects(id) on delete set null,
  type data_upload_output_type not null,
  created_at timestamp with time zone not null default now(),
  url text not null,
  remote text not null,
  is_original boolean not null default false,
  size bigint not null,
  filename text not null
);

create or replace function table_of_contents_items_primary_download_url(item table_of_contents_items)
  returns text
  security definer
  language sql
  as $$
    select 
      case
        when item.enable_download = false then null
        when item.data_layer_id is null then null
        else
          (
            select data_upload_outputs.url
            from data_upload_outputs
            where data_upload_outputs.data_source_id = (
              select data_layers.data_source_id
              from data_layers
              where data_layers.id = item.data_layer_id
            )
            and data_upload_outputs.is_original = true
            limit 1
          )
      end;
  $$;

grant execute on function table_of_contents_items_primary_download_url to anon;
