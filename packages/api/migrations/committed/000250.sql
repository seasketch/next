--! Previous: sha1:6b51bd9ba07e2e8ede6575a35547cb56782ca28a
--! Hash: sha1:b293512f8e5c129637bf907c3a7d1496d385164d

-- Enter migration here
alter table map_bookmarks add column if not exists client_generated_thumbnail text default null;
comment on column map_bookmarks.client_generated_thumbnail is 'Generated by clients. Should not be used if authorative thumbnail (image_id) is available.';

drop function if exists create_map_bookmark(text, boolean, jsonb, text[], integer, jsonb, jsonb, integer[], integer[], jsonb, text, jsonb, jsonb);
CREATE OR REPLACE FUNCTION public.create_map_bookmark(slug text, "isPublic" boolean, style jsonb, "visibleDataLayers" text[], "selectedBasemap" integer, "basemapOptionalLayerStates" jsonb, "cameraOptions" jsonb, "mapDimensions" integer[], "visibleSketches" integer[], "sidebarState" jsonb, "basemapName" text, "layerNames" jsonb, "sketchNames" jsonb, "clientGeneratedThumbnail" text) RETURNS public.map_bookmarks
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
    declare
      bookmark map_bookmarks;
      pid int;
    begin
      select id into pid from projects where projects.slug = create_map_bookmark.slug;
      if session_has_project_access(pid) then
        insert into map_bookmarks (
          project_id, 
          user_id, 
          is_public, 
          style, 
          visible_data_layers, 
          selected_basemap, 
          basemap_optional_layer_states, 
          camera_options,
          map_dimensions,
          visible_sketches,
          sidebar_state,
          basemap_name,
          layer_names,
          sketch_names,
          client_generated_thumbnail
        ) values (
          pid,
          nullif(current_setting('session.user_id', TRUE), '')::int,
          "isPublic",
          create_map_bookmark.style,
          "visibleDataLayers",
          "selectedBasemap",
          "basemapOptionalLayerStates",
          "cameraOptions",
          "mapDimensions",
          "visibleSketches",
          "sidebarState",
          "basemapName",
          "layerNames",
          "sketchNames",
          "clientGeneratedThumbnail"
        ) returning * into bookmark;
        return bookmark;
      else
        raise exception 'Permission denied';
      end if;
    end;
  $$;

grant execute on function create_map_bookmark to seasketch_user;

alter table map_bookmarks drop column if exists blurhash;
