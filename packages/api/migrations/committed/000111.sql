--! Previous: sha1:6309162fe5b5db9fe02d42c6885ebc421ada3c35
--! Hash: sha1:89bc2d1cb937fed7eff0f80d38832d6f6f38e2a9

-- Enter migration here
drop table if exists survey_consent_documents cascade;
create table survey_consent_documents (
  id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  form_element_id integer NOT NULL REFERENCES form_elements (id) ON DELETE CASCADE,
  version integer not null,
  url text not null,
  unique(form_element_id, version)
);

create or replace function create_consent_document(fid int, version int, url text)
  returns form_elements
  security definer
  language plpgsql
  as $$
    declare
      doc survey_consent_documents;
      element form_elements;
    begin
      if session_is_admin(project_id_from_field_id(fid)) = false then
        raise exception 'Must be project admin';
      end if;
      insert into survey_consent_documents (form_element_id, version, url) values (fid, version, url) returning * into doc;
      -- update form element component_settings with new values
      update form_elements
        set component_settings = jsonb_set(jsonb_set(component_settings, '{documentVersion}'::text[], to_jsonb(version)), '{documentUrl}'::text[], to_jsonb(url))
      where id = fid returning * into element;
      return element;
    end
  $$;

grant execute on function create_consent_document to seasketch_user;

comment on function create_consent_document is '@omit';


delete from form_element_types where component_name = 'Consent';
insert into form_element_types (
  component_name,
  label,
  is_input,
  is_surveys_only,
  is_single_use_only
) values (
  'Consent',
  'Consent',
  true,
  true,
  true
);
