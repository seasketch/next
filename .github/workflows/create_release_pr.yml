name: Release PR Manager
on:
  push:
    branches:
      - staging
    tags-ignore:
      - "**"
    # branches-ignore:
    #   - create-pull-request/patch
jobs:
  create_or_update_pr:
    if: ${{!contains( github.event.push.commits.*.author.name, 'seasketch-release-manager')}}
    runs-on: ubuntu-latest
    name: Create or update release pull-request
    steps:
      - uses: actions/github-script@v4
        name: debug event
        env:
          EVENT: ${{ github.event.push }}
          NAMES: ${{ github.event.push.commits.*.author.name }}
          AUTHORS: ${{ github.event.push.commits.*.author }}
        with:
          script: |
            console.log(process.env.NAMES);
            console.log(process.env.AUTHORS);
            console.log(process.env.EVENT);
      - uses: actions/setup-node@v2
        if: ${{ steps.is_deployment.outputs.is_deployment == false }}
        with:
          node-version: "16"
      - uses: actions/checkout@v2
        if: ${{ steps.is_deployment.outputs.is_deployment == false }}
        with:
          fetch-depth: 0
      - name: Cache node modules
        uses: actions/cache@v2
        if: ${{ steps.is_deployment.outputs.is_deployment == false }}
        env:
          cache-name: cache-lerna-version-node-modules
        with:
          path: |
            node_modules
            */*/node_modules
            ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install lerna
        if: ${{ steps.is_deployment.outputs.is_deployment == false }}
        run: |
          npm install
      - name: get changed packages
        if: ${{ steps.is_deployment.outputs.is_deployment == false }}
        run: |
          npx lerna changed --all --json > changed.json
      - name: get previous tag
        if: ${{ steps.is_deployment.outputs.is_deployment == false }}
        id: prev_tag
        run: |
          echo "::set-output name=tag::`npx git-semver-tags --lerna | head -n 1`"
      - name: detect migrations
        if: ${{ steps.is_deployment.outputs.is_deployment == false }}
        run: |
          git diff --name-only ${{ steps.prev_tag.outputs.tag }} -- packages/api/migrations/committed
          git diff --name-only ${{ steps.prev_tag.outputs.tag }} -- packages/api/migrations/committed > migrations.txt
          [ -s migrations.txt ] || echo "::set-output name=has_migrations::yes"
      - name: run lerna version
        if: ${{ steps.is_deployment.outputs.is_deployment == false }}
        run: |
          git config --global user.email "releases@seasketch.org"
          git config --global user.name "Release Manager"
          git checkout --
          npx lerna version --conventional-commits --no-push --yes
      - name: get new package versions
        if: ${{ steps.is_deployment.outputs.is_deployment == false }}
        run: |
          npx lerna list -a --json > list.json
      - name: Get highest version
        if: ${{ steps.is_deployment.outputs.is_deployment == false }}
        id: release_version
        run: |
          npm install compare-versions
          echo "::set-output name=version::`node -e "var compareVersions = require('compare-versions'); console.log(require('./list.json').filter((p) => p.name === 'client' || p.name === '@seasketch/api').map((p) => p.version).sort(compareVersions).reverse()[0])"`"
          git checkout -- package-lock.json package.json
      - name: Generate changelogs
        if: ${{ steps.is_deployment.outputs.is_deployment == false }}
        run: |
          npx standard-changelog -i .changelog.md
          echo "# v${{steps.release_version.outputs.version}} (`date +%D`)" > short_changelog.md
          tail -n +3 .changelog.md >> short_changelog.md
          cat short_changelog.md | cat - CHANGELOG.md > temp && mv temp CHANGELOG.md
          git add CHANGELOG.md
          # git commit -m 'Update Changelog for v${{steps.release_version.outputs.version}}'
          git commit --amend --no-edit
      - name: Create pull request message
        if: ${{ steps.is_deployment.outputs.is_deployment == false }}
        id: pull_request_message
        run: |
          node ./createReleaseSummary.js
      - name: Create Pull Request
        if: ${{ steps.is_deployment.outputs.is_deployment == false }}
        id: pr
        uses: peter-evans/create-pull-request@v3
        with:
          # base: master
          # branch: feature-ci-cd-actions
          token: ${{ secrets.ACTIONS_GITHUB_TOKEN }}
          author: Release Manager <releases@seasketch.org>
          committer: Release Manager <releases@seasketch.org>
          title: ðŸš€ Release ${{steps.release_version.outputs.version}}
          labels: |
            release
          body: |
            ${{ steps.pull_request_message.outputs.message }}
